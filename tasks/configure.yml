---
- name: Backup current configs on nginx
  block:
  - name: Backup - make directory for backup at /etc/nginx/.backup
    file:
      path: /etc/nginx/.backup
      state: directory
  - name: Backup - create specific backup dir for this running
    file:
      path: /etc/nginx/.backup/{{ ansible_date_time.iso8601 }}
      state: directory
  - name: Backup - check stats of nginx.conf
    stat: path=/etc/nginx/nginx.conf
    register: nginx_core
  - name: Backup - backing up nginx.conf
    command: mv /etc/nginx/nginx.conf /etc/nginx/.backup/{{ ansible_date_time.iso8601 }}/nginx.conf
    when: nginx_core.stat.exists
  - name: Backup - check stats of conf.d
    stat: path=/etc/nginx/conf.d
    register: nginx_vhosts
  - name: Backup - backing up conf.d
    command: mv /etc/nginx/conf.d /etc/nginx/.backup/{{ ansible_date_time.iso8601 }}/
    when: nginx_vhosts.stat.exists and nginx_vhosts.stat.isdir
  - name: Backup - init base conf.d
    file:
      path: /etc/nginx/conf.d
      state: directory
      owner: root
      group: root
      mode: 0755
  when: backup_old_config

- name: Remove sites-available and sites-enabled because of using /etc/nginx/conf.d/
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /etc/nginx/sites-available
    - /etc/nginx/sites-enabled

- name: Override nginx.conf config
  template:
    src: "nginx.conf.j2"
    dest: "/etc/nginx/nginx.conf"

- name: Configure vhosts
  template:
    src: "vhosts/{{ item.type }}.conf.j2"
    dest: "/etc/nginx/conf.d/{{ item.name | default(item.server_name) }}.conf"
  with_items: "{{ vhosts }}"
  notify:
    - validate nginx
    - reload nginx

- name: force all notified handlers to run at this point, for applying all nginx configs
  meta: flush_handlers
